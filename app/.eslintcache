[{"/Users/maximilianresch/Documents/recipe-app/app/src/index.js":"1","/Users/maximilianresch/Documents/recipe-app/app/src/App.js":"2","/Users/maximilianresch/Documents/recipe-app/app/src/reportWebVitals.js":"3","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Login.js":"4","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Register.js":"5","/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeForm.js":"6","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Home.js":"7","/Users/maximilianresch/Documents/recipe-app/app/src/utils/auth.js":"8","/Users/maximilianresch/Documents/recipe-app/app/src/components/Footer.js":"9","/Users/maximilianresch/Documents/recipe-app/app/src/utils/recipeApi.js":"10","/Users/maximilianresch/Documents/recipe-app/app/src/globalState.js":"11","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Profile.js":"12","/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeList.js":"13","/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeEdit.js":"14","/Users/maximilianresch/Documents/recipe-app/app/src/helper/useResponsive.js":"15"},{"size":674,"mtime":1610549640482,"results":"16","hashOfConfig":"17"},{"size":4952,"mtime":1610710921136,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607354524054,"results":"19","hashOfConfig":"17"},{"size":2913,"mtime":1610733848397,"results":"20","hashOfConfig":"17"},{"size":4064,"mtime":1610733289139,"results":"21","hashOfConfig":"17"},{"size":5775,"mtime":1610733704683,"results":"22","hashOfConfig":"17"},{"size":720,"mtime":1610732733132,"results":"23","hashOfConfig":"17"},{"size":270,"mtime":1608030108036,"results":"24","hashOfConfig":"17"},{"size":618,"mtime":1608041783500,"results":"25","hashOfConfig":"17"},{"size":213,"mtime":1608217760443,"results":"26","hashOfConfig":"17"},{"size":118,"mtime":1608755653847,"results":"27","hashOfConfig":"17"},{"size":2348,"mtime":1610640436805,"results":"28","hashOfConfig":"17"},{"size":3094,"mtime":1610738822836,"results":"29","hashOfConfig":"17"},{"size":4894,"mtime":1610724681207,"results":"30","hashOfConfig":"17"},{"size":905,"mtime":1610548897098,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1n35ik",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/maximilianresch/Documents/recipe-app/app/src/index.js",[],["67","68"],"/Users/maximilianresch/Documents/recipe-app/app/src/App.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/reportWebVitals.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/Login.js",["69"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport style from \"./style.module.css\";\n\nimport axios from \"axios\";\nimport * as auth from \"../utils/auth\";\n\nimport * as yup from \"yup\";\n\nimport { Input, InputGroup, Button, InputRightElement, Text, Link } from \"@chakra-ui/react\";\nimport Register from './Register';\n\nlet schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n\n  const router = useHistory();\n\n  const onSubmit = async () => {\n    const newLogin = { email, password };\n\n    const valid = await schema.validate(newLogin).catch((e) => {\n      const errorMessage = e.errors;\n      setErrorMessage(errorMessage);\n    });\n\n    if (!valid) {\n      return;\n    }\n\n    setErrorMessage(\"\");\n\n    const data = {\n      email,\n      password,\n    };\n\n    const response = await axios.post(\"http://localhost:4000/login\", data);\n    if (response.data.success) {\n      auth.saveUserToken(response.data.token);\n      router.push(\"/me\");\n    } else {\n      setErrorMessage(\"E-mail or password is invalid\");\n    }\n    console.log(\"response\", response);\n    window.location.reload(false);\n  };\n\n  const handleKeypress = (e) => {\n    if (e.which === 13) {\n      onSubmit();\n    }\n  };\n\n  return (\n    <div>\n      <form className={style.form}>\n        <h1>Login</h1>\n        <div>\n          <Input\n            variant=\"filled\"\n            placeholder=\"email\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            onKeyPress={handleKeypress}\n          ></Input>\n        </div>\n        <div>\n          <InputGroup>\n            <Input\n              variant=\"filled\"\n              placeholder=\"password\"\n              type={show ? \"text\" : \"password\"}\n              onKeyPress={handleKeypress}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            ></Input>\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick} >\n                {show ? \"Hide\" : \"Show\"}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </div>\n        <div style={{ color: \"red\" }}>{errorMessage}</div>\n\n       \n          <Button colorScheme=\"blue\" variant=\"outline\" onClick={onSubmit}>\n            login\n          </Button>\n          <div>\n        <Text style={{paddingTop: \"50px\"}}>Don't have an Account ?</Text>\n        <Text align=\"center\">\n          <Link href=\"/register\" color=\"#327AD1\">\n            Register\n          </Link>\n        </Text>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Register.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeForm.js",["70","71","72","73"],"import React, { useState, useEffect } from \"react\";\nimport style from \"./style.module.css\";\n\nimport * as yup from \"yup\";\n\nimport { Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport recipeApi from \"../utils/recipeApi\";\n\nimport {\n  Input,\n  Textarea,\n  Select,\n  Button,\n  ButtonGroup,\n  Stack,\n} from \"@chakra-ui/react\";\n\n/*\n  const recipe = [\n          {\n            title: \"Gulasch\",\n            guide: \"geh vorher scheißn (nicht hände waschen!!!)\",\n            portions: \"2\"\n            ingridients: [\n              {\n                name: \"Knoblauch\",\n                amount: \"234\",\n                measure: \"kg\"\n              }\n            ]\n          }\n        ]\n\n      */\n\nlet schema = yup.object().shape({\n  title: yup.string().required(),\n  guide: yup.string().required(),\n  ingredients: yup\n    .array(\n      yup.object().shape({\n        name: yup.string().required(),\n      })\n    )\n    .min(1),\n});\n\nexport default function RecipeForm() {\n  const [title, setTitle] = useState(\"\");\n  const [currentIngredient, setCurrentIngredient] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [guide, setGuide] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [measure, setMeasure] = useState(\"\");\n\n  const [recipies, setRecipies] = useState([]);\n\n  const onSubmit = async () => {\n    const newRecipie = { title, ingredients, guide };\n\n    const valid = await schema.validate(newRecipie).catch((e) => {\n      const errorMessage = e.errors[0];\n      setErrorMessage(errorMessage);\n\n      console.log(\"error\", errorMessage);\n    });\n\n    if (!valid) {\n      return;\n    }\n\n    console.log(\"valid\", valid);\n\n    const newList = [...recipies];\n    newList.push(newRecipie);\n    setRecipies(newList);\n    setTitle(\"\");\n    setIngredients([]);\n    setGuide(\"\");\n    setErrorMessage(\"\");\n\n    const response = await recipeApi.post(\"/recipe\", newRecipie);\n  };\n\n  const onAdd = async () => {\n    const newIngredient = { name: currentIngredient, amount, measure };\n    const newList = [...ingredients];\n    newList.push(newIngredient);\n    setIngredients(newList);\n\n    setCurrentIngredient(\"\");\n    setAmount(\"\");\n  };\n\n  return (\n    <div>\n      <form className={style.form}>\n        <h1>Recipe</h1>\n        <div>\n          <Input\n            variant=\"filled\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n            }}\n            placeholder=\"title\"\n          ></Input>\n        </div>\n        <div>\n          <Textarea\n            multiline\n            rows={10}\n            variant=\"filled\"\n            value={guide}\n            placeholder=\"guide\"\n            onChange={(e) => {\n              setGuide(e.target.value);\n            }}\n          ></Textarea>\n        </div>\n        <div>\n          <Input\n            variant=\"filled\"\n            value={currentIngredient}\n            placeholder=\"ingredients\"\n            onChange={(e) => {\n              setCurrentIngredient(e.target.value);\n            }}\n          ></Input>\n        </div>\n        <Box display=\"flex\" flexDirection=\"row\" gap=\"10px\">\n          <Input\n            variant=\"filled\"\n            value={amount}\n            placeholder=\"amount\"\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          ></Input>\n          <Box style={{ paddingLeft: \"4px\", width: \"100%\" }}>\n            <Select\n              variant=\"filled\"\n              placeholder=\"measure\"\n              onChange={(e) => {\n                setMeasure(e.target.value);\n              }}\n            >\n              <option value=\"\"></option>\n              <option value={\"g\"}>g</option>\n              <option value={\"kg\"}>kg</option>\n              <option value={\"ml\"}>ml</option>\n            </Select>\n          </Box>\n        </Box>\n        {ingredients.map((ingredient, i) => {\n          return (\n            <p key={i}>\n              {\" \"}\n              {ingredient.amount} {ingredient.measure} {ingredient.name}\n            </p>\n          );\n        })}\n        <Stack direction=\"column\" spacing={4}>\n          <Button\n            variant=\"outline\"\n            onClick={onAdd}\n            color=\"#265C9E\"\n            borderColor=\"#265C9E\"\n            border=\"solid 2px #265C9E\"\n          >\n            Add ingredients and amount\n          </Button>\n          <Button\n            variant=\"outline\"\n            onClick={onSubmit}\n            color=\"#265C9E\"\n            borderColor=\"#265C9E\"\n            border=\"solid 2px #265C9E\"\n          >\n            Submit\n          </Button>\n        </Stack>\n      </form>\n      <div\n        style={{\n          color: \"red\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: \"20px\",\n        }}\n      >\n        {errorMessage}\n      </div>\n\n      <div className={style.list}>\n        <ul>\n          {recipies.map((recipe, i) => {\n            return (\n              <div key={i} style={{ marginTop: \"1rem\" }}>\n                <h2>Preview</h2>\n                <li>\n                  <h4> Title:</h4> {recipe.title}\n                  <h4>ingredients:</h4>\n                  {recipe.ingredients.map((ingredient, i) => {\n                    return (\n                      <div key={i}>\n                        <p>\n                          {ingredient.amount} {ingredient.measure}{\" \"}\n                          {ingredient.name}\n                        </p>\n                      </div>\n                    );\n                  })}\n                  <h4>guide:</h4>\n                  {recipe.guide}\n                </li>\n                <br />\n              </div>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Home.js",["74"],"import React from \"react\";\nimport { Box, Button, Link } from \"@chakra-ui/react\";\nimport {ArrowRightIcon} from '@chakra-ui/icons'\nimport style from \"./style.module.css\";\n\nimport { useRecoilState } from 'recoil';\nimport { userState } from '../globalState';\n\nexport default function Home() {\n  const [user, setUser] = useRecoilState(userState)\n\n  return (\n    <Box >\n      <div className={style.bg}>\n      \n        <div className={style.homeHeading}>RECIPE</div>\n        <div>\n        {!user && (\n        <Link href=\"/register\">\n        <Button rightIcon={<ArrowRightIcon boxSize={3} />} variant=\"solid\" colorScheme=\"blue\" color=\"#F0F1F2\">Get started</Button>\n      </Link>\n    )}\n    </div>\n      </div>\n    </Box>\n  );\n}\n","/Users/maximilianresch/Documents/recipe-app/app/src/utils/auth.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/components/Footer.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/utils/recipeApi.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/globalState.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/Profile.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeList.js",["75","76","77","78"],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeEdit.js",["79","80","81"],"import React, { useState, useEffect } from \"react\";\nimport {useParams} from 'react-router-dom'\nimport style from \"./style.module.css\";\n\nimport * as yup from \"yup\";\n\nimport { Box } from \"@material-ui/core\";\nimport recipeApi from \"../utils/recipeApi\";\n\nimport { Input, Textarea, Select, Button, Stack } from '@chakra-ui/react';\n\n/*\n  const recipe = [\n          {\n            title: \"Gulasch\",\n            guide: \"geh vorher scheißn (nicht hände waschen!!!)\",\n            portions: \"2\"\n            ingridients: [\n              {\n                name: \"Knoblauch\",\n                amount: \"234\",\n                measure: \"kg\"\n              }\n            ]\n          }\n        ]\n\n      */\n\nlet schema = yup.object().shape({\n  title: yup.string().required(),\n  guide: yup.string().required(),\n  ingredients: yup\n    .array(\n      yup.object().shape({\n        name: yup.string().required(),\n      })\n    )\n    .min(1),\n});\n\nexport default function RecipeEdit() {\n\n  let { id } = useParams();\n\n  useEffect( async () => {\n    console.log('recipeId', id)\n\n    const response = await recipeApi.get(`/recipe/${id}` )\n\n    const body = response.data\n\n    const { recipie } = body\n    \n  \n    setTitle(recipie.title)\n    setIngredients(recipie.ingredients)\n    setGuide(recipie.guide)\n    setAmount(recipie.amount)\n    setMeasure(recipie.measure)\n\n  }, [id])\n\n\n  \n  const [title, setTitle] = useState(\"\");\n  const [currentIngredient, setCurrentIngredient] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [guide, setGuide] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [measure, setMeasure] = useState(\"\");\n\n\n  const [recipies, setRecipies] = useState([]);\n\n  const onSubmit = async () => {\n    const newRecipie = { title, ingredients, guide };\n\n    const valid = await schema.validate(newRecipie).catch((e) => {\n      const errorMessage = e.errors[0];\n      setErrorMessage(errorMessage);\n\n      console.log(\"error\", errorMessage);\n    });\n\n    if (!valid) {\n      return;\n    }\n\n    console.log(\"valid\", valid);\n\n    const newList = [...recipies];\n    newList.push(newRecipie);\n    setRecipies(newList);\n\n    const response = await recipeApi.put(`/recipe/${id}`, newRecipie);\n  };\n\n  const onDelete = (index) => {\n    const newList = [...recipies];\n    newList.splice(index, 1);\n    setRecipies(newList);\n  };\n\n  const onAdd = async () => {\n    const newIngredient = { name: currentIngredient, amount, measure };\n    const newList = [...ingredients];\n    newList.push(newIngredient);\n    setIngredients(newList);\n  };\n\n  return (\n    <div>\n      <form className={style.form}>\n        <h1>Recipe</h1>\n        <div>\n        <Input\n          variant=\"filled\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n          placeholder=\"title\"\n        ></Input>\n        </div>\n        <div>\n        <Textarea\n          multiline\n          rows={10}\n          variant=\"filled\"\n          value={guide}\n          placeholder=\"guide\"\n          onChange={(e) => {\n            setGuide(e.target.value);\n          }}\n        ></Textarea>\n        </div>\n        <div>\n        <Input\n          variant=\"filled\"\n          value={currentIngredient}\n          placeholder=\"ingredients\"\n          onChange={(e) => {\n            setCurrentIngredient(e.target.value);\n          }}\n        ></Input>\n        </div>\n        <Box display=\"flex\" flexDirection=\"row\" gap=\"10px\">\n          <Input\n            variant=\"filled\"\n            value={amount}\n            placeholder=\"amount\"\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          ></Input>\n          <Select\n            variant=\"filled\"\n              placeholder=\"measure\"\n              onChange={(e) => {\n                setMeasure(e.target.value);\n              }}\n            >\n              <option value=\"\"></option>\n              <option value={\"g\"}>g</option>\n              <option value={\"kg\"}>kg</option>\n              <option value={\"ml\"}>ml</option>\n            </Select>\n        </Box>\n        {ingredients.map((ingredient, i) => {\n          return (\n            <p key={i}>\n              {\" \"}\n              {ingredient.amount} {ingredient.measure} {ingredient.name}\n            </p>\n          );\n        })}\n        <Stack direction=\"column\" spacing={4}>\n          <Button variant=\"outline\" onClick={onAdd} colorScheme=\"green\">\n            Add ingredients and amount\n          </Button>\n          <Button variant=\"outline\" onClick={onSubmit} colorScheme=\"green\">\n            Submit\n          </Button>\n        </Stack>\n      </form>\n      <div\n        style={{\n          color: \"red\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: \"20px\",\n        }}\n      >\n        {errorMessage}\n      </div>\n      \n    </div>\n  );\n}\n","/Users/maximilianresch/Documents/recipe-app/app/src/helper/useResponsive.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":11,"column":8,"nodeType":"88","messageId":"89","endLine":11,"endColumn":16},{"ruleId":"86","severity":1,"message":"90","line":1,"column":27,"nodeType":"88","messageId":"89","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"91","line":7,"column":10,"nodeType":"88","messageId":"89","endLine":7,"endColumn":20},{"ruleId":"86","severity":1,"message":"92","line":15,"column":3,"nodeType":"88","messageId":"89","endLine":15,"endColumn":14},{"ruleId":"86","severity":1,"message":"93","line":84,"column":11,"nodeType":"88","messageId":"89","endLine":84,"endColumn":19},{"ruleId":"86","severity":1,"message":"94","line":10,"column":16,"nodeType":"88","messageId":"89","endLine":10,"endColumn":23},{"ruleId":"86","severity":1,"message":"94","line":25,"column":16,"nodeType":"88","messageId":"89","endLine":25,"endColumn":23},{"ruleId":"86","severity":1,"message":"95","line":27,"column":9,"nodeType":"88","messageId":"89","endLine":27,"endColumn":11},{"ruleId":"96","severity":1,"message":"97","line":29,"column":13,"nodeType":"98","endLine":32,"endColumn":4},{"ruleId":"86","severity":1,"message":"93","line":37,"column":11,"nodeType":"88","messageId":"89","endLine":37,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":46,"column":14,"nodeType":"98","endLine":62,"endColumn":4},{"ruleId":"86","severity":1,"message":"93","line":97,"column":11,"nodeType":"88","messageId":"89","endLine":97,"endColumn":19},{"ruleId":"86","severity":1,"message":"99","line":100,"column":9,"nodeType":"88","messageId":"89","endLine":100,"endColumn":17},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'ButtonGroup' is defined but never used.","'response' is assigned a value but never used.","'setUser' is assigned a value but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'onDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]