[{"/Users/maximilianresch/Documents/recipe-app/app/src/index.js":"1","/Users/maximilianresch/Documents/recipe-app/app/src/App.js":"2","/Users/maximilianresch/Documents/recipe-app/app/src/reportWebVitals.js":"3","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Login.js":"4","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Register.js":"5","/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeForm.js":"6","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Home.js":"7","/Users/maximilianresch/Documents/recipe-app/app/src/utils/auth.js":"8","/Users/maximilianresch/Documents/recipe-app/app/src/components/Footer.js":"9","/Users/maximilianresch/Documents/recipe-app/app/src/utils/recipeApi.js":"10","/Users/maximilianresch/Documents/recipe-app/app/src/globalState.js":"11","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Profile.js":"12","/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeList.js":"13","/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeEdit.js":"14","/Users/maximilianresch/Documents/recipe-app/app/src/helper/useResponsive.js":"15"},{"size":674,"mtime":1610549640482,"results":"16","hashOfConfig":"17"},{"size":4952,"mtime":1611700558836,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1607354524054,"results":"19","hashOfConfig":"17"},{"size":3180,"mtime":1611697778033,"results":"20","hashOfConfig":"17"},{"size":4555,"mtime":1611508735908,"results":"21","hashOfConfig":"17"},{"size":7204,"mtime":1611759748238,"results":"22","hashOfConfig":"17"},{"size":1305,"mtime":1611758048185,"results":"23","hashOfConfig":"17"},{"size":270,"mtime":1608030108036,"results":"24","hashOfConfig":"17"},{"size":1302,"mtime":1610794738273,"results":"25","hashOfConfig":"17"},{"size":213,"mtime":1608217760443,"results":"26","hashOfConfig":"17"},{"size":118,"mtime":1608755653847,"results":"27","hashOfConfig":"17"},{"size":2348,"mtime":1610640436805,"results":"28","hashOfConfig":"17"},{"size":4840,"mtime":1611758838826,"results":"29","hashOfConfig":"17"},{"size":4894,"mtime":1610724681207,"results":"30","hashOfConfig":"17"},{"size":905,"mtime":1610548897098,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1n35ik",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/maximilianresch/Documents/recipe-app/app/src/index.js",[],["66","67"],"/Users/maximilianresch/Documents/recipe-app/app/src/App.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/reportWebVitals.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/Login.js",["68"],"import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport style from \"./style.module.css\";\n\nimport axios from \"axios\";\nimport * as auth from \"../utils/auth\";\n\nimport * as yup from \"yup\";\n\nimport {\n  Input,\n  InputGroup,\n  Button,\n  InputLeftElement,\n  Text,\n  Link,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\n\nimport Register from \"./Register\";\n\nlet schema = yup.object().shape({\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nexport default function Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [show, setShow] = useState(false);\n  const toast = useToast();\n  const handleClick = () => setShow(!show);\n\n  const router = useHistory();\n\n  const onSubmit = async () => {\n    const newLogin = { email, password };\n\n    const valid = await schema.validate(newLogin).catch((e) => {\n      const errorMessage = e.errors;\n      setErrorMessage(errorMessage);\n    });\n\n    if (!valid) {\n      return toast({\n        title: \"Something went wrong.\",\n        description: \"Unable to login!\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n    }\n\n    setErrorMessage(\"\");\n\n    const data = {\n      email,\n      password,\n    };\n\n    const response = await axios.post(\"http://localhost:4000/login\", data);\n    if (response.data.success) {\n      auth.saveUserToken(response.data.token);\n      router.push(\"/me\");\n    } else {\n      setErrorMessage(\"E-mail or password is invalid\");\n    }\n    console.log(\"response\", response);\n    window.location.reload(false);\n  };\n\n  const handleKeypress = (e) => {\n    if (e.which === 13) {\n      onSubmit();\n    }\n  };\n\n  return (\n    <div>\n      <form className={style.form}>\n        <h1>Login</h1>\n        <div>\n          <Input\n            variant=\"filled\"\n            placeholder=\"email\"\n            onChange={(e) => {\n              setEmail(e.target.value);\n            }}\n            onKeyPress={handleKeypress}\n          ></Input>\n        </div>\n        <div>\n          <InputGroup>\n            <Input\n              variant=\"filled\"\n              placeholder=\"password\"\n              type={show ? \"text\" : \"password\"}\n              onKeyPress={handleKeypress}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            ></Input>\n            <InputLeftElement>\n              <Button size=\"sm\" onClick={handleClick}>\n                {show ? <ViewIcon /> : <ViewOffIcon />}\n              </Button>\n            </InputLeftElement>\n          </InputGroup>\n        </div>\n        <div style={{ color: \"red\" }}>{errorMessage}</div>\n\n        <Button colorScheme=\"blue\" variant=\"outline\" onClick={onSubmit}>\n          login\n        </Button>\n        <div>\n          <Text style={{ paddingTop: \"50px\" }}>Don't have an Account ?</Text>\n          <Text align=\"center\">\n            <Link href=\"/register\" color=\"#327AD1\">\n              Register\n            </Link>\n          </Text>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/maximilianresch/Documents/recipe-app/app/src/pages/Register.js",["69"],"import React from \"react\";\nimport style from \"./style.module.css\";\n\nimport axios from \"axios\";\nimport * as auth from \"../utils/auth\";\n\nimport * as yup from \"yup\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box } from \"@material-ui/core\";\nimport {\n  Input,\n  InputGroup,\n  Button,\n  InputLeftElement,\n  Text,\n  Link,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { ViewIcon, ViewOffIcon } from \"@chakra-ui/icons\";\n\nlet schema = yup.object().shape({\n  firstname: yup.string().required(),\n  lastname: yup.string().required(),\n  email: yup.string().email().required(),\n  password: yup.string().required(),\n});\n\nexport default function Register() {\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const toast = useToast();\n\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n\n  const router = useHistory();\n\n  const onSubmit = async () => {\n    const newRegister = { firstname, lastname, email, password };\n\n    const valid = await schema.validate(newRegister).catch((e) => {\n      const errorMessage = e.errors;\n      setErrorMessage(errorMessage);\n\n      console.log(\"error\", errorMessage);\n    });\n\n    if (!valid) {\n      return;\n    }\n\n    console.log(\"Register\", {\n      firstname,\n      lastname,\n      email,\n      password,\n    });\n    setErrorMessage(\"\");\n\n    const data = {\n      firstname,\n      lastname,\n      email,\n      password,\n    };\n\n    const response = await axios.post(\"http://localhost:4000/register\", data);\n\n    if (response.data.success) {\n      auth.getUserToken(response.data.token);\n      router.push(\"/me\");\n      return toast({\n        title: \"Account created.\",\n        description: \"Account successfully created!\",\n        status: \"success\",\n        duration: 9000,\n        isClosable: true,\n      });\n    } else {\n      setErrorMessage(\"E-mail is already in use\");\n      return toast({\n        title: \"An error occurred.\",\n        description: \"Unable to create user account!\",\n        status: \"error\",\n        duration: 9000,\n        isClosable: true,\n      });\n    }\n\n    console.log(\"response\", response);\n    window.location.reload(false);\n  };\n\n  const handleKeypress = (e) => {\n    if (e.which === 13) {\n      onSubmit();\n    }\n  };\n\n  return (\n    <div>\n      <form className={style.form} action=\"/register\" method=\"POST\">\n        <h1>Register</h1>\n        <div className={style.nameInput}>\n          <Box display=\"flex\" flexDirection=\"row\" gridGap=\"5px\">\n            <Input\n              variant=\"filled\"\n              placeholder=\"firstname\"\n              onKeyPress={handleKeypress}\n              onChange={(e) => {\n                setFirstname(e.target.value);\n              }}\n            ></Input>\n\n            <Input\n              variant=\"filled\"\n              placeholder=\"lastname\"\n              onKeyPress={handleKeypress}\n              onChange={(e) => {\n                setLastname(e.target.value);\n              }}\n            ></Input>\n          </Box>\n        </div>\n        <div>\n          <Box mt=\"3\">\n            <Input\n              variant=\"filled\"\n              placeholder=\"email\"\n              type=\"email\"\n              onKeyPress={handleKeypress}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            ></Input>\n          </Box>\n        </div>\n        <div>\n          <InputGroup>\n            <Input\n              variant=\"filled\"\n              placeholder=\"password\"\n              type={show ? \"text\" : \"password\"}\n              onKeyPress={handleKeypress}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            ></Input>\n            <InputLeftElement>\n              <Button size=\"sm\" onClick={handleClick}>\n                {show ? <ViewIcon /> : <ViewOffIcon />}\n              </Button>\n            </InputLeftElement>\n          </InputGroup>\n        </div>\n        <div style={{ color: \"red\" }}>{errorMessage}</div>\n        <Button colorScheme=\"blue\" variant=\"outline\" onClick={onSubmit}>\n          register\n        </Button>\n        <div>\n          <Text style={{ paddingTop: \"50px\" }}>Already using Recipe ?</Text>\n          <Text align=\"center\">\n            <Link href=\"/login\" color=\"#327AD1\">\n              Sign in\n            </Link>\n          </Text>\n        </div>\n      </form>\n    </div>\n  );\n}\n","/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeForm.js",["70","71","72"],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/Home.js",["73"],"/Users/maximilianresch/Documents/recipe-app/app/src/utils/auth.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/components/Footer.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/utils/recipeApi.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/globalState.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/Profile.js",[],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeList.js",["74","75","76","77","78","79","80"],"/Users/maximilianresch/Documents/recipe-app/app/src/pages/RecipeEdit.js",["81","82","83"],"import React, { useState, useEffect } from \"react\";\nimport {useParams} from 'react-router-dom'\nimport style from \"./style.module.css\";\n\nimport * as yup from \"yup\";\n\nimport { Box } from \"@material-ui/core\";\nimport recipeApi from \"../utils/recipeApi\";\n\nimport { Input, Textarea, Select, Button, Stack } from '@chakra-ui/react';\n\n/*\n  const recipe = [\n          {\n            title: \"Gulasch\",\n            guide: \"geh vorher scheißn (nicht hände waschen!!!)\",\n            portions: \"2\"\n            ingridients: [\n              {\n                name: \"Knoblauch\",\n                amount: \"234\",\n                measure: \"kg\"\n              }\n            ]\n          }\n        ]\n\n      */\n\nlet schema = yup.object().shape({\n  title: yup.string().required(),\n  guide: yup.string().required(),\n  ingredients: yup\n    .array(\n      yup.object().shape({\n        name: yup.string().required(),\n      })\n    )\n    .min(1),\n});\n\nexport default function RecipeEdit() {\n\n  let { id } = useParams();\n\n  useEffect( async () => {\n    console.log('recipeId', id)\n\n    const response = await recipeApi.get(`/recipe/${id}` )\n\n    const body = response.data\n\n    const { recipie } = body\n    \n  \n    setTitle(recipie.title)\n    setIngredients(recipie.ingredients)\n    setGuide(recipie.guide)\n    setAmount(recipie.amount)\n    setMeasure(recipie.measure)\n\n  }, [id])\n\n\n  \n  const [title, setTitle] = useState(\"\");\n  const [currentIngredient, setCurrentIngredient] = useState(\"\");\n  const [ingredients, setIngredients] = useState([]);\n  const [guide, setGuide] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [measure, setMeasure] = useState(\"\");\n\n\n  const [recipies, setRecipies] = useState([]);\n\n  const onSubmit = async () => {\n    const newRecipie = { title, ingredients, guide };\n\n    const valid = await schema.validate(newRecipie).catch((e) => {\n      const errorMessage = e.errors[0];\n      setErrorMessage(errorMessage);\n\n      console.log(\"error\", errorMessage);\n    });\n\n    if (!valid) {\n      return;\n    }\n\n    console.log(\"valid\", valid);\n\n    const newList = [...recipies];\n    newList.push(newRecipie);\n    setRecipies(newList);\n\n    const response = await recipeApi.put(`/recipe/${id}`, newRecipie);\n  };\n\n  const onDelete = (index) => {\n    const newList = [...recipies];\n    newList.splice(index, 1);\n    setRecipies(newList);\n  };\n\n  const onAdd = async () => {\n    const newIngredient = { name: currentIngredient, amount, measure };\n    const newList = [...ingredients];\n    newList.push(newIngredient);\n    setIngredients(newList);\n  };\n\n  return (\n    <div>\n      <form className={style.form}>\n        <h1>Recipe</h1>\n        <div>\n        <Input\n          variant=\"filled\"\n          value={title}\n          onChange={(e) => {\n            setTitle(e.target.value);\n          }}\n          placeholder=\"title\"\n        ></Input>\n        </div>\n        <div>\n        <Textarea\n          multiline\n          rows={10}\n          variant=\"filled\"\n          value={guide}\n          placeholder=\"guide\"\n          onChange={(e) => {\n            setGuide(e.target.value);\n          }}\n        ></Textarea>\n        </div>\n        <div>\n        <Input\n          variant=\"filled\"\n          value={currentIngredient}\n          placeholder=\"ingredients\"\n          onChange={(e) => {\n            setCurrentIngredient(e.target.value);\n          }}\n        ></Input>\n        </div>\n        <Box display=\"flex\" flexDirection=\"row\" gap=\"10px\">\n          <Input\n            variant=\"filled\"\n            value={amount}\n            placeholder=\"amount\"\n            onChange={(e) => {\n              setAmount(e.target.value);\n            }}\n          ></Input>\n          <Select\n            variant=\"filled\"\n              placeholder=\"measure\"\n              onChange={(e) => {\n                setMeasure(e.target.value);\n              }}\n            >\n              <option value=\"\"></option>\n              <option value={\"g\"}>g</option>\n              <option value={\"kg\"}>kg</option>\n              <option value={\"ml\"}>ml</option>\n            </Select>\n        </Box>\n        {ingredients.map((ingredient, i) => {\n          return (\n            <p key={i}>\n              {\" \"}\n              {ingredient.amount} {ingredient.measure} {ingredient.name}\n            </p>\n          );\n        })}\n        <Stack direction=\"column\" spacing={4}>\n          <Button variant=\"outline\" onClick={onAdd} colorScheme=\"green\">\n            Add ingredients and amount\n          </Button>\n          <Button variant=\"outline\" onClick={onSubmit} colorScheme=\"green\">\n            Submit\n          </Button>\n        </Stack>\n      </form>\n      <div\n        style={{\n          color: \"red\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          padding: \"20px\",\n        }}\n      >\n        {errorMessage}\n      </div>\n      \n    </div>\n  );\n}\n","/Users/maximilianresch/Documents/recipe-app/app/src/helper/useResponsive.js",[],{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":21,"column":8,"nodeType":"90","messageId":"91","endLine":21,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":94,"column":5,"nodeType":"94","messageId":"95","endLine":95,"endColumn":35},{"ruleId":"88","severity":1,"message":"96","line":1,"column":27,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"97","line":27,"column":3,"nodeType":"90","messageId":"91","endLine":27,"endColumn":20},{"ruleId":"88","severity":1,"message":"98","line":105,"column":11,"nodeType":"90","messageId":"91","endLine":105,"endColumn":19},{"ruleId":"88","severity":1,"message":"99","line":10,"column":16,"nodeType":"90","messageId":"91","endLine":10,"endColumn":23},{"ruleId":"88","severity":1,"message":"100","line":21,"column":3,"nodeType":"90","messageId":"91","endLine":21,"endColumn":13},{"ruleId":"88","severity":1,"message":"101","line":22,"column":3,"nodeType":"90","messageId":"91","endLine":22,"endColumn":20},{"ruleId":"88","severity":1,"message":"102","line":24,"column":10,"nodeType":"90","messageId":"91","endLine":24,"endColumn":21},{"ruleId":"88","severity":1,"message":"99","line":33,"column":16,"nodeType":"90","messageId":"91","endLine":33,"endColumn":23},{"ruleId":"88","severity":1,"message":"103","line":39,"column":9,"nodeType":"90","messageId":"91","endLine":39,"endColumn":11},{"ruleId":"104","severity":1,"message":"105","line":41,"column":13,"nodeType":"106","endLine":44,"endColumn":4},{"ruleId":"88","severity":1,"message":"98","line":51,"column":11,"nodeType":"90","messageId":"91","endLine":51,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":46,"column":14,"nodeType":"106","endLine":62,"endColumn":4},{"ruleId":"88","severity":1,"message":"98","line":97,"column":11,"nodeType":"90","messageId":"91","endLine":97,"endColumn":19},{"ruleId":"88","severity":1,"message":"107","line":100,"column":9,"nodeType":"90","messageId":"91","endLine":100,"endColumn":17},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'Register' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'useEffect' is defined but never used.","'AlertDialogFooter' is defined but never used.","'response' is assigned a value but never used.","'setUser' is assigned a value but never used.","'InputGroup' is defined but never used.","'InputRightElement' is defined but never used.","'Search2Icon' is defined but never used.","'id' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'onDelete' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]